<!DOCTYPE html>
<html lang="en">
    <%- include("header") -%>
<body>

    <% if (error) { %>
        <script>alert("Please use recommended country names");</script>
    <% } %>

    <div class="main">

        <h1 id="resultsHeaderIndex">Covid-19</h1>
        <div class="container">
            <div class="sign-up-content">
                <form method="POST" class="signup-form" action="/" autocomplete="off">
                    <h2 class="form-title">Results by country</h2>

                    <p class="loginhere" id="subtitle">
                        <a href="https://news.google.com/topics/CAAqBwgKMJy5lwswj-KuAw?hl=en-US&gl=US&ceid=US%3Aen" target="_blank" class="loginhere-link">Latest Covid-19 news</a>
                    </p>

                    <center>
                        <div class="form-textbox">
                            <input type="text" name="countryName" id="name" placeholder="Type country name" />
                        </div>
    
                        <br>
    
                        <div class="form-textbox">
                            <input type="submit" name="submit" id="submitbtn" class="submit" value="Show results" />
                        </div>

                        <h4>Or</h4>

                        <div class="form-textbox">
                            <a href="/compare"><button id="btn" type="button">Compare two countries</button></a> 
                        </div>
                    </center>

                </form>

                <script>
                    function autocomplete(inp, arr) {
                    var currentFocus;
                    
                    inp.addEventListener("input", function(e) {
                        var a, b, i, val = this.value;
            
                        closeAllLists();
                        if (!val) { return false;}
                        currentFocus = -1;
                        
                        a = document.createElement("DIV");
                        a.setAttribute("id", this.id + "autocomplete-list");
                        a.setAttribute("class", "autocomplete-items");
                        
                        this.parentNode.appendChild(a);
                        
                        for (i = 0; i < arr.length; i++) {
                            
                            if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                            /*create a DIV element for each matching element:*/
                            b = document.createElement("DIV");
                            /*make the matching letters bold:*/
                            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                            b.innerHTML += arr[i].substr(val.length);
                            /*insert a input field that will hold the current array item's value:*/
                            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                            /*execute a function when someone clicks on the item value (DIV element):*/
                            b.addEventListener("click", function(e) {
                                /*insert the value for the autocomplete text field:*/
                                inp.value = this.getElementsByTagName("input")[0].value;
                                /*close the list of autocompleted values,
                                (or any other open lists of autocompleted values:*/
                                closeAllLists();
                            });
                            a.appendChild(b);
                            }
                        }
                    });
                    inp.addEventListener("keydown", function(e) {
                        var x = document.getElementById(this.id + "autocomplete-list");
                        if (x) x = x.getElementsByTagName("div");
                        if (e.keyCode == 40) {
                            /*If the arrow DOWN key is pressed,
                            increase the currentFocus variable:*/
                            currentFocus++;
                            /*and and make the current item more visible:*/
                            addActive(x);
                        } else if (e.keyCode == 38) { //up
                            /*If the arrow UP key is pressed,
                            decrease the currentFocus variable:*/
                            currentFocus--;
                            /*and and make the current item more visible:*/
                            addActive(x);
                        } else if (e.keyCode == 13) {
                            /*If the ENTER key is pressed, prevent the form from being submitted,*/
                            e.preventDefault();
                            if (currentFocus > -1) {

                            if (x) x[currentFocus].click();
                            }
                        }
                    });
                    function addActive(x) {
                        /*a function to classify an item as "active":*/
                        if (!x) return false;
                        /*start by removing the "active" class on all items:*/
                        removeActive(x);
                        if (currentFocus >= x.length) currentFocus = 0;
                        if (currentFocus < 0) currentFocus = (x.length - 1);
                        /*add class "autocomplete-active":*/
                        x[currentFocus].classList.add("autocomplete-active");
                    }
                    function removeActive(x) {
            
                        for (var i = 0; i < x.length; i++) {
                        x[i].classList.remove("autocomplete-active");
                        }
                    }
                    function closeAllLists(elmnt) {
                        /*close all autocomplete lists in the document,
                        except the one passed as an argument:*/
                        var x = document.getElementsByClassName("autocomplete-items");
                        for (var i = 0; i < x.length; i++) {
                        if (elmnt != x[i] && elmnt != inp) {
                            x[i].parentNode.removeChild(x[i]);
                        }
                        }
                    }

                    document.addEventListener("click", function (e) {
                        closeAllLists(e.target);
                    });
                    }
            
                    var countries = ["Bangladesh","Belgium","Burkina Faso","Bulgaria","Bosnia and Herzegovina","Barbados","Wallis and Futuna","Saint Barthelemy","Bermuda","Brunei","Bolivia","Bahrain","Burundi","Benin","Bhutan","Jamaica","Bouvet Island","Botswana","Samoa","Brazil","Bahamas","Jersey","Belarus","Belize","Russia","Rwanda","Serbia","East Timor","Reunion","Turkmenistan","Tajikistan","Romania","Tokelau","Guinea-Bissau","Guatemala","Greece","Equatorial Guinea","Guadeloupe","Japan","Guyana","Guernsey","French Guiana","Georgia","Grenada","United Kingdom","Gabon","El Salvador","Guinea","Gambia","Greenland","Gibraltar","Ghana","Oman","Tunisia","Jordan","Croatia","Haiti","Hungary","Hong Kong","Honduras","Venezuela","Puerto Rico","Palestinian Territory","Palau","Portugal","Paraguay","Iraq","Panama","French Polynesia","Papua New Guinea","Peru","Pakistan","Philippines","Pitcairn","Poland","Zambia","Western Sahara","Estonia","Egypt","South Africa","Ecuador","Italy","Vietnam","Solomon Islands","Ethiopia","Somalia","Zimbabwe","Saudi Arabia","Spain","Eritrea","Montenegro","Moldova","Madagascar","Saint Martin","Morocco","Monaco","Uzbekistan","Myanmar","Mali","Macao","Mongolia","Marshall Islands","Macedonia","Mauritius","Malta","Malawi","Maldives","Martinique","Montserrat","Mauritania","Isle of Man","Uganda","Tanzania","Malaysia","Mexico","Israel","France","Saint Helena","Finland","Fiji","Falkland Islands","Micronesia","Faroe Islands","Nicaragua","Netherlands","Norway","Namibia","Vanuatu","New Caledonia","Niger","Norfolk Island","Nigeria","New Zealand","Nepal","Nauru","Niue","Cook Islands","Kosovo","Ivory Coast","Switzerland","Colombia","China","Cameroon","Chile","Cocos Islands","Canada","Republic of the Congo","Czech Republic","Cyprus","Christmas Island","Costa Rica","Curacao","Cape Verde","Cuba","Swaziland","Syria","Sint Maarten","Kyrgyzstan","Kenya","South Sudan","Suriname","Kiribati","Cambodia","Comoros","Slovakia","South Korea","Slovenia","North Korea","Kuwait","Senegal","San Marino","Sierra Leone","Seychelles","Kazakhstan","Cayman Islands","Singapore","Sweden","Sudan","Dominican Republic","Dominica","Djibouti","Denmark","Germany","Yemen","Algeria","United States","Uruguay","Mayotte","Lebanon","Saint Lucia","Laos","Tuvalu","Taiwan","Trinidad and Tobago","Turkey","Sri Lanka","Liechtenstein","Latvia","Tonga","Lithuania","Luxembourg","Liberia","Lesotho","Thailand","Togo","Chad","Libya","Vatican","United Arab Emirates","Andorra","Antigua and Barbuda","Afghanistan","Anguilla","Iceland","Iran","Armenia","Albania","Angola","Antarctica","American Samoa","Argentina","Australia","Austria","Aruba","India","Aland Islands","Azerbaijan","Ireland","Indonesia","Ukraine","Qatar","Mozambique"];
            
                    autocomplete(document.getElementById("name"), countries);
                </script>

                <p class="loginhere">
                    <center>
                        <p>Data sourced from Worldometers</p>
                        <a href="https://github.com/adreaskar/covid19-world-api" class="loginhere-link">Github</a>
                    </center>
                    
                </p>
            </div>
        </div>

    </div>
</body><!-- This templates was made by Colorlib (https://colorlib.com) -->
</html>